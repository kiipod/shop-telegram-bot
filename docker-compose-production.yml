version: '3.9'

networks:
  bot-network:
  traefik-public:
    external: true

services:
  nginx:
    build:
      context: .
      dockerfile: docker/prod/Nginx/Dockerfile
    container_name: nginx
    volumes:
      - vendor:/app/vendor
    networks:
      - bot-network
      - traefik-public
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.routers.nginx.rule=Host(`kiipod.ru`) || Host(`www.kiipod.ru`)
      - traefik.http.services.nginx.loadBalancer.server.port=80
      - traefik.http.middlewares.nginx-redirect.redirectRegex.regex=^(https?://)www.kiipod.ru/(.*)$$
      - traefik.http.middlewares.nginx-redirect.redirectRegex.replacement=$${1}kiipod.ru/$${2}
      - traefik.http.middlewares.nginx-redirect.redirectRegex.permanent=true
      - traefik.http.routers.nginx.middlewares=nginx-redirect,secure-headers
      - traefik.http.routers.nginx.entryPoints=https
      - traefik.http.routers.nginx.tls=true
      - traefik.http.routers.nginx.tls.certResolver=letsEncrypt

  app:
    build:
      context: .
      dockerfile: docker/prod/App/Dockerfile
    container_name: app
    volumes:
      - vendor:/app/vendor
    networks:
      - bot-network

  mysql:
    build:
      context: .
      dockerfile: docker/prod/MySQL/Dockerfile
    container_name: mysql
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USERNAME}
      MYSQL_PASSWORD: ${MYSQL_USER_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - mysql:/var/lib/mysql
    networks:
      - bot-network

  npm:
    build:
      context: .
      dockerfile: docker/prod/Node/Dockerfile
    container_name: npm
    working_dir: ${APP_PATH}
    profiles: ["npm"]
    entrypoint: ['npm']
    networks:
      - bot-network

volumes:
  vendor:
  mysql:
